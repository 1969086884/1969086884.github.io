<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>向日葵远程代码执行漏洞（CNVD-2022-10270）复现</title>
    <link href="/2022/02/19/%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CNVD-2022-10270%EF%BC%89%E5%A4%8D%E7%8E%B0/"/>
    <url>/2022/02/19/%E5%90%91%E6%97%A5%E8%91%B5%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CNVD-2022-10270%EF%BC%89%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer">  该漏洞本质就是当主机启动向日葵后，会开启一个http服务，该服务中存在一些未授权访问获取CID的接口，携带该CID去访问/check接口可以执行系统命令<h2 id="0x01复现环境信息"><a href="#0x01复现环境信息" class="headerlink" title="0x01复现环境信息"></a>0x01复现环境信息</h2><p>向日葵版本：10.5.0.29613、11.0.0.33162</p><p>安装程序：SunloginClient_10.5.0.29613_X64.exe、SunloginClient_11.0.0.33162.exe</p><h2 id="0x02复现步骤"><a href="#0x02复现步骤" class="headerlink" title="0x02复现步骤"></a>0x02复现步骤</h2><h3 id="2-1找到向日葵http服务开启的端口"><a href="#2-1找到向日葵http服务开启的端口" class="headerlink" title="2.1找到向日葵http服务开启的端口"></a>2.1找到向日葵http服务开启的端口</h3><p>一种方法是通过系统命令找到向日葵相关服务占用的端口，另一种是查看向日葵的日志，此处主要说第二种<br>右键向日葵托盘图标，选择“日志”选项，即可进入向日葵的日志文件夹</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645030155667-501d2603-bb6a-4318-9ad0-6b0fdbff2d95.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=230&id=F3cc5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=460&originWidth=372&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14081&status=done&style=none&taskId=ufc036b00-91bd-4bf5-8b08-ecb68ac99aa&title=&width=186" alt="image.png"><br>找到如图所有的sunlogin_service.xxx格式的日志，在前面几行即可看到日志中打印的服务开启端口，如下图为49671</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645030236963-96a63f26-ab10-404a-9f50-ae8f8f5fe56b.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=250&id=WT1Kd&margin=%5Bobject%20Object%5D&name=image.png&originHeight=499&originWidth=1399&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97360&status=done&style=none&taskId=u067c91aa-a73e-41e4-84d9-9bfc220d047&title=&width=699.5" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645030261453-87f1c221-45ec-4abf-a5a1-6094ba77cf02.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=303&id=E3TsN&margin=%5Bobject%20Object%5D&name=image.png&originHeight=606&originWidth=1498&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103254&status=done&style=none&taskId=ue6b52341-9146-4650-8e2e-644f430862d&title=&width=749" alt="image.png"></p><h3 id="2-2获取CID"><a href="#2-2获取CID" class="headerlink" title="2.2获取CID"></a>2.2获取CID</h3><p>往/cgi-bin/rpc接口构造如下请求包，可以在未授权下获取verify_string,即CID<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645025944094-aa775eb5-2182-4b57-9333-6d024ecb9807.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=484&id=NHc9s&margin=%5Bobject%20Object%5D&name=image.png&originHeight=968&originWidth=1905&originalType=binary&ratio=1&rotation=0&showTitle=false&size=123367&status=done&style=none&taskId=uc92cf4d1-21b0-4205-aad8-2f990790d05&title=&width=952.5" alt="image.png"></p><h3 id="2-3执行命令"><a href="#2-3执行命令" class="headerlink" title="2.3执行命令"></a>2.3执行命令</h3><p>往/check接口构造如下请求包，注意需要将上一步骤获取的CID按照如图格式填充到cookie中，且在url中提供cmd参数，如下图所示ping 127.0.0.1,可以看到成功回显</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /check?cmd=ping%<span class="hljs-number">20127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645026011403-0222385c-9596-41fb-8686-3d6b2f576fbd.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=466&id=ofRYT&margin=%5Bobject%20Object%5D&name=image.png&originHeight=931&originWidth=1680&originalType=binary&ratio=1&rotation=0&showTitle=false&size=150673&status=done&style=none&taskId=u1f4eabb6-b48d-45ee-a550-2f3137e1538&title=&width=840" alt="image.png"><br>修改url如下执行whoami</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /check?cmd=ping..%<span class="hljs-number">2</span>F..%<span class="hljs-number">2</span>F..%<span class="hljs-number">2</span>Fwindows%<span class="hljs-number">2</span>Fsystem<span class="hljs-number">32</span>%<span class="hljs-number">2</span>Fwindowspowershell%<span class="hljs-number">2</span>Fv<span class="hljs-number">1</span>.<span class="hljs-number">0</span>%<span class="hljs-number">2</span>Fpowershell.exe%<span class="hljs-number">20</span>whoami<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645026505340-2facd7f5-1b6a-464a-9fe5-4ccceb6b3687.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=400&id=YK7SX&margin=%5Bobject%20Object%5D&name=image.png&originHeight=799&originWidth=2201&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162221&status=done&style=none&taskId=ue2347fc8-4e31-4208-932c-2061fe98938&title=&width=1100.5" alt="image.png"><br>​</p><p>修改url入下执行ipconfig</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ping</span>..%<span class="hljs-number">2</span>F..%<span class="hljs-number">2</span>F..%<span class="hljs-number">2</span>Fwindows%<span class="hljs-number">2</span>Fsystem<span class="hljs-number">32</span>%<span class="hljs-number">2</span>Fwindowspowershell%<span class="hljs-number">2</span>Fv<span class="hljs-number">1</span>.<span class="hljs-number">0</span>%<span class="hljs-number">2</span>Fpowershell.exe%<span class="hljs-number">20</span>ipconfig<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645027043747-a1f1ba3f-5a90-4294-bc1e-807908860d52.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=602&id=gvYL6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1204&originWidth=1888&originalType=binary&ratio=1&rotation=0&showTitle=false&size=180550&status=done&style=none&taskId=u8ccff2d7-05b5-4fe0-94e1-19597377457&title=&width=944" alt="image.png"></p><h2 id="0x03关于一些执行命令失败的情况和其他说明"><a href="#0x03关于一些执行命令失败的情况和其他说明" class="headerlink" title="0x03关于一些执行命令失败的情况和其他说明"></a>0x03关于一些执行命令失败的情况和其他说明</h2><p>3.1check接口并非没有任何防护，直接执行部分敏感命令时是失败的<br>如下直接执行whoami,会返回commandnotallow<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645027607550-e6d9ed0d-3bed-4e0b-af25-385f526a6c61.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=369&id=MrkNl&margin=%5Bobject%20Object%5D&name=image.png&originHeight=737&originWidth=2099&originalType=binary&ratio=1&rotation=0&showTitle=false&size=323757&status=done&style=none&taskId=uf59dd4f8-c2ae-46d1-b14c-a80b1a16260&title=&width=1049.5" alt="image.png"><br>但是如上文所示，通过调用powershell或cmd,则是可以执行这些命令的<br>​</p><p>3.2执行不合法的命令，会返回error2<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645027729462-72821b1d-037d-4e41-9c4a-207e35e70ab0.png#clientId=u58347649-c010-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=358&id=hvR8N&margin=%5Bobject%20Object%5D&name=image.png&originHeight=716&originWidth=1913&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106741&status=done&style=none&taskId=uc950e457-4922-4285-9e1b-3ce5a05cb4d&title=&width=956.5" alt="image.png"></p><p>3.3获取CID的那个请求，其实也可以是一个GET请求<br>​</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645077858917-93e552d7-6ce3-4d3e-8a75-567fecfc22c8.png#clientId=uf883a639-fb85-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=397&id=u53e03e5d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=794&originWidth=2538&originalType=binary&ratio=1&rotation=0&showTitle=false&size=144003&status=done&style=none&taskId=ued59095c-680f-4738-a52b-8952e005ca0&title=&width=1269" alt="image.png"><br>3.4服务开放端口<strong>并非一定是 4W+高位端口</strong>  ，此处我用11.0.0.33162 @ 1307复现服务端口为2175<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645113041308-64c35c25-5933-481c-b4e8-50b3b1931bca.png#clientId=uf883a639-fb85-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=424&id=u5ae7d3d2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=847&originWidth=1903&originalType=binary&ratio=1&rotation=0&showTitle=false&size=157274&status=done&style=none&taskId=u5fbba8ff-4721-4f09-a2f3-51ec786b225&title=&width=951.5" alt="image.png"><br>3.5该漏洞的利用特征还算比较明显的，那么应该如何绕过waf检测呢<br>当前试过进行大小写转换、以及利用/.\混淆,不过都没有执行成功，应该是软件中明确限定了大小写，从一些相关的日志，可以看出，每一个接口疑似都是一个待加载的模块，当我改了大小写之后，找不到这个模块了<br>​</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645280177037-526e1246-f235-46de-a707-35eeeb0f3bd2.png#clientId=u20eed5a4-eb19-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=754&id=u7e291adf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1507&originWidth=2521&originalType=binary&ratio=1&rotation=0&showTitle=false&size=730282&status=done&style=none&taskId=u39dbfddf-e3a3-4a15-953b-c77694665ae&title=&width=1260.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22550391/1645280202805-941680fe-1746-4a63-92e4-56c9982ab5c0.png#clientId=u20eed5a4-eb19-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=477&id=u6d4825a9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=953&originWidth=2489&originalType=binary&ratio=1&rotation=0&showTitle=false&size=431718&status=done&style=none&taskId=uea7fd1f1-9fd6-4ede-bfbc-e9782d74682&title=&width=1244.5" alt="image.png"><br>后续等我学了逆向再研究下</p><h2 id="0x04参考"><a href="#0x04参考" class="headerlink" title="0x04参考"></a><strong>0x04参考</strong></h2><p> Sp4ce 师傅写的向日葵远程命令执行漏洞分析文档</p><p>​</p>]]></content>
    
    
    <categories>
      
      <category>安全</category>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>向日葵</tag>
      
      <tag>远程命令执行</tag>
      
      <tag>CNVD-2022-10270</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulhub环境搭建</title>
    <link href="/2021/11/07/vulhub%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/11/07/vulhub%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer">  <h2 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h2><p>系统又重装了，又要重新安装下vulhub，总体来说官方的文档很详细，重装花费不了多少时间，可见一个好的文档对于一个项目来说多么重要，产品推广思路学起来</p><h2 id="二-具体步骤"><a href="#二-具体步骤" class="headerlink" title="二.具体步骤"></a>二.具体步骤</h2><h3 id="2-1安装docker和python环境"><a href="#2-1安装docker和python环境" class="headerlink" title="2.1安装docker和python环境"></a>2.1安装docker和python环境</h3><p>这个我本地已经有了，不做太多说明<br>​</p><h3 id="2-2下载vulhub项目源码"><a href="#2-2下载vulhub项目源码" class="headerlink" title="2.2下载vulhub项目源码"></a>2.2下载vulhub项目源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/vulhub/vulhub.git<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22550391/1636195596945-a1f4f08a-4f58-42f1-a0ee-59f4404dd9dc.png#clientId=u97bb46d3-934f-4&from=paste&height=185&id=u6de35797&margin=%5Bobject%20Object%5D&name=image.png&originHeight=369&originWidth=1697&originalType=binary&ratio=1&size=74986&status=done&style=none&taskId=uf0ddae8f-e44f-460f-adb6-74c88e3e9a4&width=848.5" alt="image.png"></p><h3 id="2-3安装docker-compose"><a href="#2-3安装docker-compose" class="headerlink" title="2.3安装docker-compose"></a>2.3安装docker-compose</h3><p>​</p><blockquote><p>Docker Compose is a tool for running multi-container applications on Docker defined using the <a href="https://compose-spec.io/">Compose file format</a>.</p></blockquote><p>docker-compose是一个能将一组关联密切的容器管理起来的工具<br>​</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install docker-compose<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22550391/1636195751687-93551090-1d5b-4b0e-9fc9-33b6ec3676b3.png#clientId=u8143a9c2-0471-4&from=paste&height=286&id=u62b56301&margin=%5Bobject%20Object%5D&name=image.png&originHeight=571&originWidth=1845&originalType=binary&ratio=1&size=117576&status=done&style=none&taskId=u36037c77-2bee-4ec7-b902-dbf9a020147&width=922.5" alt="image.png"></p><h3 id="2-4启动环境"><a href="#2-4启动环境" class="headerlink" title="2.4启动环境"></a>2.4启动环境</h3><p>上述步骤都正常完成后，就进入其中的某个漏洞对的目录，执行如下命令，构建相应的漏洞环境了,一下以struct2的s2-059为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 自动化编译环境</span><br>docker-compose build<br><br><span class="hljs-comment"># 启动整个环境</span><br>docker-compose up -d<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22550391/1636196023492-d5764475-28ea-49db-a0fd-d27573ba7f58.png#clientId=u8143a9c2-0471-4&from=paste&height=182&id=u806c7eee&margin=%5Bobject%20Object%5D&name=image.png&originHeight=364&originWidth=1988&originalType=binary&ratio=1&size=75902&status=done&style=none&taskId=u22a7e2b2-40aa-4759-b1cb-d31627f4acc&width=994" alt="image.png"></p><h3 id="2-5对于容器环境的一些操作"><a href="#2-5对于容器环境的一些操作" class="headerlink" title="2.5对于容器环境的一些操作"></a>2.5对于容器环境的一些操作</h3><p>2.5.1产看容器运行状况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps -a<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22550391/1636273007096-0bbbf2b8-34d4-421e-a7ef-0bce782faec1.png#clientId=u63fddb2a-d089-4&from=paste&height=144&id=uf316811f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=287&originWidth=2345&originalType=binary&ratio=1&size=62356&status=done&style=none&taskId=ub1497f11-f430-47a1-9cb9-c2c0e4eb210&width=1172.5" alt="image.png"><br>2.5.2进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it 容器name或id/bin/bash<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2021/png/22550391/1636273072202-8a0709b6-a3f1-4074-89a0-a31fe2d79600.png#clientId=u63fddb2a-d089-4&from=paste&height=53&id=ua1778639&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=1914&originalType=binary&ratio=1&size=24709&status=done&style=none&taskId=uacae3ebd-f96b-4794-b631-3673a79c3da&width=957" alt="image.png"><br>2.5.3容器启停</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker start 容器name或id<br>docker stop  容器name或id<br>docker restart 容器name或id<br></code></pre></td></tr></table></figure><p>​</p><h3 id="2-5测试完成后，删除整个环境"><a href="#2-5测试完成后，删除整个环境" class="headerlink" title="2.5测试完成后，删除整个环境"></a>2.5测试完成后，删除整个环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose down -v<br></code></pre></td></tr></table></figure><h3 id="2-6尝试启用docker加速"><a href="#2-6尝试启用docker加速" class="headerlink" title="2.6尝试启用docker加速"></a>2.6尝试启用docker加速</h3><p>​</p><p>访问<a href="https://www.daocloud.io/mirror">https://www.daocloud.io/mirror</a>，将获得到的仓库镜像地址配置到自己本地安装的docker配置里面，并apply<br>(我使用加速和不加速好像没啥区别，后面还是自己翻墙了）<br><img src="https://cdn.nlark.com/yuque/0/2021/png/22550391/1636273318817-dd1a076b-31ed-42fb-b385-4d60a3dd995b.png#clientId=u63fddb2a-d089-4&from=paste&height=718&id=ue22f501f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1435&originWidth=2555&originalType=binary&ratio=1&size=192550&status=done&style=none&taskId=ue550fe0d-6198-460b-8770-a466c9ce388&width=1277.5" alt="image.png"></p><h2 id="三-参考链接"><a href="#三-参考链接" class="headerlink" title="三.参考链接"></a>三.参考链接</h2><p><a href="https://github.com/vulhub/vulhub">https://github.com/vulhub/vulhub</a><br><a href="https://vulhub.org/">https://vulhub.org/</a><br><a href="https://vulhub.org/#/docs/docker-accelerator/">https://vulhub.org/#/docs/docker-accelerator/</a>  </p>]]></content>
    
    
    <categories>
      
      <category>安全</category>
      
      <category>环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vulhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我系统又重装了</title>
    <link href="/2021/09/20/%E6%88%91%E7%B3%BB%E7%BB%9F%E5%8F%88%E9%87%8D%E8%A3%85%E4%BA%86/"/>
    <url>/2021/09/20/%E6%88%91%E7%B3%BB%E7%BB%9F%E5%8F%88%E9%87%8D%E8%A3%85%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<p>eee<br>某天晚上升级了下系统，结果崩了，之前又没做快照…</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/09/20/hello-world/"/>
    <url>/2021/09/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
